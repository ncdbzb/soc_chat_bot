version: '3.8'
services:
  db:
    image: postgres:16
    container_name: postgres_db
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    ports:
      - ${DB_PORT}:${DB_PORT}
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis/redis-stack-server:latest
    container_name: redis
    env_file:
      - .env
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    container_name: backend
    env_file:
      - .env
#    expose:
#      - "8000"
    ports:
      - "8000:8000"
    restart: always
    depends_on:
      - db
      - redis

  soc_llm:
    build:
      context: ./soc_llm
      dockerfile: Dockerfile.soc_llm
    container_name: soc_llm
    env_file:
      - .env
    ports:
      - "5000:5000"
    restart: always
    depends_on:
      - backend

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    container_name: frontend
    env_file:
      - ./frontend/.env
#    environment:
#      - REACT_APP_API_URL=https://localhost/api
    volumes:
      - nginx_certs:/etc/nginx
    ports:
      - "443:443"
    restart: always
    depends_on:
      - backend

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pg_admin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:  
      - "8888:80"
    restart: always

#  flower:
#    image: mher/flower:latest
#    container_name: flower
#    env_file:
#      - .env
#    ports:
#      - "5555:5555"
#    command: celery --broker=redis://redis:${REDIS_PORT}/0 flower --port=5555
#    depends_on:
#      - redis
#      - backend

volumes:
  pgdata:
  nginx_certs:
